<!DOCTYPE html>
<html style="height: 100%">
<style type="text/css">
    .footer {
        position: fixed;
        text-align: center;
        bottom: 0px;
        width: 100%;
        color: #000000;
    }
    .searchbar {
        text-align: right;
        width: 100%;
        color: #000000;
    }

    .friends {
        text-align: right;
        color: #000000;
        margin-right: 10px;
        float: right;
    }

    .login-head {
        text-align: left;
        margin: 2%;
        float: left;
    }
    .statusposts {
        float: right;
        margin: 2%
    }
</style>

<head>
    <title>Homepage</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"
        integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"
        integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13"
        crossorigin="anonymous"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        
    <link href="https://code.jquery.com/ui/1.13.0/themes/smoothness/jquery-ui.min.css" rel="stylesheet">
        
    <script src="https://code.jquery.com/ui/1.13.0/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<body style="height: 100%">
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container-fluid">
          <a class="navbar-brand" href="/">PennBook</a>
          <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>
          <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
            <div class="navbar-nav">
                <a class="nav-link" href="/friendVisualizationPage"> Friend Visualizer </a>
              <a class="nav-link" href="/friendsList"> List of Friends </a>
                 <a class="nav-link" href="/wall"> My Wall</a>
                 <a class="nav-link" href="/chats"> Chat </a>
                 <a class="nav-link" href="/newssearch"> News </a>       
                 <a class="nav-link" href="/logout"> Logout </a>
            </div>
          </div>
        </div>
      </nav>
    </nav>
    <div class="login-head">
        <h1>Homepage</h1>
        <span class="border-bottom"></span>

        <div id="wallposts">
            <% if (data!=null) { for(var i=0; i < (data).length; i++) {%>
                <div class="card" style="width: 50rem; margin-bottom: 1%">
                    <div class="card-body">
                        <tr>
                            <% if (data[i].flipped.BOOL) { %>
                                <h4 style="margin-top: 1rem;">
                                    <%= data[i].content.S %>
                                </h4>
                                <h5>Posted by: <%= data[i].wallusername.S %> on <%= data[i].posterusername.S %>'s wall
                                </h5>
                                <h5 style="margin-top: 1rem;" id="<%=data[i].postuniqueid.S %>-time"><script>
                                    var time = new Date(parseInt(<%= data[i].timestamp.S %>))
                                    document.getElementById("<%=data[i].postuniqueid.S %>-time").innerHTML= time.toLocaleString('en-US', {timeZone: 'EST'}).toString();
                                    </script></h5>

                                <%} else {%>
                                    <h4 style="margin-top: 1rem">
                                        <%= data[i].content.S %>
                                    </h4>
                                    <h5>Posted by: <%= data[i].posterusername.S %> on <%= data[i].wallusername.S %>'s
                                                wall</h5>
                                                <h5 style="margin-top: 1rem;" id="<%=data[i].postuniqueid.S %>-time"><script>
                                                    var time = new Date(parseInt(<%= data[i].timestamp.S %>))
                                                    document.getElementById("<%=data[i].postuniqueid.S %>-time").innerHTML= time.toLocaleString('en-US', {timeZone: 'EST'}).toString();
                                                    </script></h5>
                                    <%} %>
                                        <div id="<%=data[i].postuniqueid.S %>-comments"></div>
                                        <form id="<%=data[i].postuniqueid.S %>"
                                            onsubmit="addComment(this.id); return false" method="POST">
                                            <input  class = "form-control" style = "margin-bottom: 5px;" name="comment" type="text" required placeholder="Comment">
                                            <input class = "btn btn-dark" type="submit" value="Add Comment">
                                        </form>
                        </tr>
                    </div>
                </div>

                <% }} %>
        </div>
        
    </div>
    <div class="statusposts">
        <div class="searchbar">
            <form action="/userSearchResultsPage" method="post">
                        <input class = "form-control" style = "width: 60%; float: left" required type="text" name="usersearch" , id="log"
                placeholder="User Search...">
                        <button class="btn btn-primary">Search</button>
                        <div id="searchresults"> </div>
            </form>
        </div>
        <h2>Friends</h2>
        <div id="friendshipposts"></div>
        <div id="onlinefriends"></div>
        <h2>Status Updates</h2>
        <div id="statusupdates">
            
        </div>
    </div>
    
    <script type="text/javascript">
        var onlineFriends = new Set();
        var username;
        var posts = <%- JSON.stringify(data) %> ;
        if (posts == null) {
            posts = []
        }

        var friendshipposts = false
        var postsSet = new Set()
        var commentsSet = new Set()
        var latestComm = new Set()

        for (var i = 0; i < posts.length; i++) {
            console.log("Posts + " + posts.length);
            postsSet.add(posts[i].postuniqueid.S)
        }

        function getFriendships() {
            $.ajax({
                type: "GET",
                url: "/getFriendships",
                success: function (friendships) {
                    for (var i = 0; i < friendships.length; i++) {
                        const div = document.getElementById("friendshipposts")
                        const divapp = document.createElement('div');
                        divapp.innerHTML = friendships[i] + " and you recently became friends!";
                        //divapp.setAttribute('class', 'card');
                        //divapp.setAttribute('style', 'width: 50rem; margin-top: 3rem');
                        div.prepend(divapp);
                    }
                },
            })
        }
        function getOnlineFriends() {
            $.ajax({
                type: "GET",
                url: "/getOnline",
                success: function (online) {
                    console.log("RECIEVED THIS FROM ROUTE ONLINE")
                    console.log("THIS IS A BREAK")
                    console.log(online)
                    //console.log("THIS IS A BREAK")*/
                    var latestOnline = new Set();
                    for (var i = 0; i < online.length; i++) {
                        latestOnline.add(online[i].username.S);
                        if (!onlineFriends.has(online[i].username.S)) {
                            console.log("THIS IS USER")
                            console.log(online[i])
                            const div = document.getElementById("onlinefriends")
                            const divapp = document.createElement('div');
                            divapp.innerHTML = online[i].firstname.S + " " + online[i].lastname.S + " is online";
                            divapp.setAttribute("id", "online-" + online[i].username.S);
                            divapp.setAttribute('style', 'color: green; font-weight: bold');
                            div.append(divapp);
                            onlineFriends.add(online[i].username.S);
                        }
                    }

                    for (let item of onlineFriends) {
                        if (!latestOnline.has(item)) {
                            document.getElementById("online-" + item).remove();
                            onlineFriends.delete(item);
                        }
                    }
                },
            })
        }


        async function getStatusUpdates() {
            return new Promise(resolve => {
                $.ajax({
                    type: "GET",
                    url: "/getFriendsStatusUpdates",
                    success: function (updates) {
                        console.log("here with updates")
                        console.log(updates);
                        for (var i = 0; i < updates.length; i++) {
                            if (!postsSet.has(updates[i].postuniqueid.S)) {
                                const outerDiv = document.createElement('div');
                                outerDiv.setAttribute('class', 'card');
                                outerDiv.setAttribute('style', 'width: 50rem; margin-bottom: 1%')

                                const secondDiv = document.createElement('div');
                                secondDiv.setAttribute('class', 'card-body');


                                const h4 = document.createElement('h4');

                                h4.setAttribute('style', 'margin-top: 1rem;')
                                h4.innerHTML = updates[i].content.S;

                                const h5 = document.createElement('h5');
                                h5.innerHTML = "By: " + updates[i].posterusername.S;

                                var time = new Date(parseInt(updates[i].timestamp.S))
                                const h52 = document.createElement('h5');
                                h52.setAttribute('style', 'margin-top: 1rem;')
                                h52.innerHTML = time.toLocaleString('en-US', {timeZone: 'EST'}).toString();

                                const formdiv = document.createElement('div');
                                formdiv.setAttribute('id', updates[i].postuniqueid.S + "-comments")
                                
                                const form = document.createElement('form');
                                form.setAttribute('id', updates[i].postuniqueid.S)
                                form.setAttribute("method", "POST")
                                form.setAttribute("onsubmit", "addComment(this.id); return false")

                                const input1 = document.createElement('input');
                                input1.setAttribute('class', 'form-control');
                                input1.setAttribute('style', 'margin-bottom: 5px;')
                                input1.setAttribute('name', 'comment');
                                input1.setAttribute('type', 'text');
                                input1.setAttribute('required', '');
                                input1.setAttribute('placeholder', 'Comment');

                                const input2 = document.createElement('input');
                                input2.setAttribute('class', 'btn btn-dark');
                                input2.setAttribute('value', 'Add Comment')
                                input2.setAttribute('type', 'submit');

                                form.append(input1);
                                form.append(input2);
                                secondDiv.append(h4);
                                secondDiv.append(h5);
                                secondDiv.append(h52);
                                secondDiv.append(formdiv);
                                secondDiv.append(form);
                                outerDiv.append(secondDiv)
                                const divMain = document.getElementById("statusupdates")
                                divMain.prepend(outerDiv);
                                postsSet.add(updates[i].postuniqueid.S)
                            }
                        }
                        resolve('Resolved');
                    },

                })
            })
        }

        async function getUser() {
            return new Promise(resolve => {
                $.ajax({
                    type: "GET",
                    url: "/getUser",
                    success: function (data) {
                        console.log(data);
                        username = data;
                        resolve('Resolved');
                    }
                })
            })
        }
        ///MAIN
        function init() {
            getUser().then(val => {
                console.log("INSIDE USER")
                getOnlineFriends();
                if (!friendshipposts) {
                    getFriendships();
                    friendshipposts = true;
                }
                
                getStatusUpdates().then(val => {
                    latestComm = new Set()
                    console.log("POST SET")
                    console.log(postsSet.size);
                    var promises = []
                    for (let item of postsSet) {
                        console.log("GETTING " + item);
                        promises.push(getComments(item))
                    }
                    Promise.all(promises).then(val => {
                        for (let item of commentsSet) {
                            if (!latestComm.has(item)) {
                                console.log("DELETING COMM")
                                document.getElementById(item).remove()
                                commentsSet.delete(item);
                            }
                        }
                        latestComm.clear()
                    })


                });
            })
        }


        function addComment(id) {
            console.log(id)
            var form = $("#" + id);
            var newcomm = form.serializeArray()
            var comment = {
                "content": newcomm[0].value,
                "timestamp": Date.now(),
                "postuniqueid": id,
                "usernameofcommentor": username,
            }

            console.log(newcomm);
            $.ajax({
                type: "POST",
                url: "/addComment",
                data: comment,
                success: function (data) {
                    var key = comment.timestamp + "-" + comment.usernameofcommentor;
                    const div = document.getElementById(id + "-comments");
                    console.log("DIV")
                    console.log(div);
                    const divapp = document.createElement('div');
                    var time = new Date(parseInt(comment.timestamp))
                    divapp.innerHTML = comment.usernameofcommentor + ":   " + comment.content + " (" +
                    time.toLocaleString('en-US', {timeZone: 'EST'}).toString() +  ")";
                    divapp.setAttribute('style', 'padding: 2px');
                    div.prepend(divapp)
                    commentsSet.add(key);
                }
            })
        }

        function getComments(postuniqueid) {
            return new Promise(resolve => {
                $.ajax({
                    type: "GET",
                    url: "/getComments?postid=" + postuniqueid,
                    success: function (comments) {
                        console.log("COMMMENTS HERE for " + postuniqueid);
                        console.log(comments);
                        for (var i = 0; i < comments.length; i++) {
                            var key = comments[i].timestamp.S + "-" + comments[i].usernameofcommentor.S;
                            latestComm.add(key);
                            //console.log(postuniqueid);
                            if (!commentsSet.has(key)) {
                                //console.log("ADDING COMMENT " + key)
                                var div = document.getElementById(postuniqueid + "-comments")
                                var divapp = document.createElement('div');
                                var time = new Date(parseInt(comments[i].timestamp.S))
                                divapp.innerHTML = comments[i].usernameofcommentor.S + ":   " + comments[i].content.S + " (" +
                                time.toLocaleString('en-US', {timeZone: 'EST'}).toString() +  ")";
                                divapp.setAttribute("id", key);
                                divapp.setAttribute('style', 'padding: 2px');
                                div.prepend(divapp);
                                commentsSet.add(key);
                            }
                        }
                        resolve('resolved');
                    },
                })
            })
        }

        ////REFRESH
        function refresh() {
            init()
            setTimeout(refresh, 5000);
            // console.log("refreshing")

        }

        const log = document.getElementById('log');

        log.addEventListener('keyup', logKey);

        function logKey(e) {

            console.log(document.getElementById('log').value);

            var searchStringItem = new Object();
            searchStringItem.searchterm = document.getElementById('log').value;


            var selectItem = function (event, ui) {
                $("#log").val(ui.item.value);
                return false;
            }



            // now need to add ajax call only if length greater than 0
            if (searchStringItem.searchterm.length > 0) {

                // send text and get back results (suggestions)
                $.post('/userSearchSuggestions', searchStringItem, function (results) {
                    console.log(results);

                    var listOfResults = [];

                    for (var i = 0; i < results.length; i++) {
                        var currentPersonSuggested = results[i];
                        console.log(currentPersonSuggested)
                        var fullnametemp = currentPersonSuggested.fullname;
                        var usernametemp = currentPersonSuggested.username;

                        console.log(fullnametemp);
                        console.log(usernametemp);
                        var displayed = fullnametemp;
                        listOfResults.push(displayed);

                    }

                    console.log(listOfResults)

                    // displaying data

                    $("#log").autocomplete({
                        source: listOfResults,
                        select: selectItem
                    });


                });
            }
        }
        refresh()

    </script>
    <div class="footer"><a href="/accountsettingsPage"> Change Account Settings </a> </div>

</body>

</html>